datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  role      String
  isActive  Boolean    @default(true)
  createdAt DateTime   @default(now())
  therapist Therapist?
  patient   Patient?
  admin     Admin?

  activityLogs  UserActivityLog[]
  performedLogs UserActivityLog[] @relation("PerformedBy")
}

model Therapist {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @unique
  patients  Patient[]
  firstName String?
  lastName  String?
}

model Patient {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [userId], references: [id])
  userId          Int              @unique
  therapistId     Int?
  firstName       String?
  lastName        String?
  displayName     String
  createdAt       DateTime         @default(now())
  surveyResponses SurveyResponse[]
  therapist       Therapist?       @relation(fields: [therapistId], references: [id])
}

model Admin {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
  firstName String?
  lastName  String?
}

model UserActivityLog {
  id            Int      @id @default(autoincrement())
  userId        Int
  performedById Int?
  action        String
  details       String?
  timestamp     DateTime @default(now())

  user        User  @relation(fields: [userId], references: [id])
  performedBy User? @relation("PerformedBy", fields: [performedById], references: [id])

  @@index([userId])
  @@index([performedById])
}

model SurveyItem {
  id       Int    @id @default(autoincrement())
  question String
  type     String
}

model SurveyResponse {
  id         Int      @id @default(autoincrement())
  patientId  Int
  surveyDate DateTime @default(now())
  responses  String
  patient    Patient  @relation(fields: [patientId], references: [id])

  @@index([patientId])
}
